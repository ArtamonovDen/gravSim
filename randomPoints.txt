int main(int argc, char * argv[]){

	srand(time(NULL));

	Screen screen;
	if (screen.init() == 0)
		std::cout << "failured init" << std::endl;


	swarm swarmA;
	
	int r = 0;
	while (1){

		int elapsed = SDL_GetTicks();
		int green = (1 + sin(elapsed*0.001)) * 128;
		int red = (1 + sin(elapsed*0.002)) * 128;
		int blue = (1 + sin(elapsed*0.003)) * 128;

		

		const particle * const pParticle = swarmA.getParticles();
		for (int i = 0; i < swarm::NPARTICLES; i++){
			particle prtcl = pParticle[i];

			int x = (prtcl.m_x + 1)* Screen::SCREEN_WIDTH/2;
			int y = (prtcl.m_y + 1)* Screen::SCREEN_HEIGHT/2;

			screen.setPixel(x, y, red, green, blue);
			
		}
		/*int elapsed =SDL_GetTicks();
		int green = (1+ sin(elapsed*0.001)) * 128;
		int red= (1 + sin(elapsed*0.002)) * 128;
		int blue = (1 + sin(elapsed*0.003)) * 128;

		std::cout << green << " ";
		for (int y = 0; y < screen.SCREEN_HEIGHT; y++){
			for (int x = 0; x < screen.SCREEN_WIDTH; x++){
				screen.setPixel(x, y, red, green, blue);
				
			}			
		}*/


		screen.update();

		if (screen.processEvents() == 0){
			break;
		}
	}






	return EXIT_SUCCESS;


}